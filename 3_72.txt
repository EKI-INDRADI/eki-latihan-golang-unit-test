golang memiliki aturan untuk file test


filename akhiran harus _test

example :
helo_world.go
helo_world_test.go  
(contoh untuk testing kata hello_world bebbas , 
tapi mending di samain nama functio yang akan di test)



pembuatan function test helloWorld harus TestHelloWorld (biar patternya sama) , Test<bebas_nama_function> jg boleh


---------------------------
Aturan Function Unit Test

Selain aturan namafile, di Go-Lang juga sudah diatur untuk nama function unit test 1

Namafunction untuk unit test harus diawali dengan nama Test

Misal jika kita ingin mengetest function HelloWorld, maka kita akan membuat function unit test
dengan nama TestHelloWorld

Tak ada aturan untuk nama belakang function unit test harus sama dengan nama function yang
akan di test, yang penting adalah harus diawalin dengan kata Test

Selanjutnyaharus memiliki parameter (t *testing.T) dan tidak mengembalikan return value 
---------------------------

cd eki-latihan-golang-unit-test\_3_72_testing
go mod init




code .....


Menjalankan Unit Test
Untuk menjalankan unit test kita bisa menggunakan perintah :
go test

Jika kita ingin lihat lebih detail function test apa saja yang sudah di running, kita bisa gunakan
perintah :
go test -v

Dan jika kita ingin memilih function unit test mana yang ingin di running, kita bisa gunakan
perintah :
go test -v-run TestNamaFunction




Jika Error no go files pada visual studio code wajib bikin main.go dan main_test.go atau 
jalankan di dalam folder spesific  :

"cd eki-latihan-golang-unit-test\_3_72_testing\helper" go test  
"cd eki-latihan-golang-unit-test\_3_72_testing\helper" go test -v  
SPESIFIC FUNCTION : "cd eki-latihan-golang-unit-test\_3_72_testing\helper" go test -v -run=TestHelloWorldIndradi  
SPESIFIC FUNCTION : "cd eki-latihan-golang-unit-test\_3_72_testing\helper" go test -v TestHelloWorldIndradi  



jalankan secara keseluruhan (1 package termasuk seluruh function):
"cd eki-latihan-golang-unit-test\_3_72_testing" go test ./...

---------------------------